[{"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\index.js":"1","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\About\\About.jsx":"2","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx":"3","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx":"4","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx":"5","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\App.js":"6","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\reportWebVitals.js":"7","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx":"8"},{"size":712,"mtime":1609501647735,"results":"9","hashOfConfig":"10"},{"size":2865,"mtime":1609617160109,"results":"11","hashOfConfig":"10"},{"size":290,"mtime":1609501647488,"results":"12","hashOfConfig":"10"},{"size":3239,"mtime":1609501647504,"results":"13","hashOfConfig":"10"},{"size":4486,"mtime":1609501647473,"results":"14","hashOfConfig":"10"},{"size":4322,"mtime":1609618536136,"results":"15","hashOfConfig":"10"},{"size":375,"mtime":1609501647735,"results":"16","hashOfConfig":"10"},{"size":5848,"mtime":1609501647488,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bv51m1",{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\index.js",[],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\About\\About.jsx",["39","40","41","42","43","44"],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx",[],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx",["45","46","47","48","49"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from 'gsap';\r\nimport \"./Skills.scss\";\r\nimport Skill from \"./../../components/Skill/Skill\";\r\nimport Python from \"./../../images/skills/py-white.png\";\r\nimport CSS from \"./../../images/skills/css-white.webp\";\r\nimport HTML5 from \"./../../images/skills/html-white.webp\";\r\nimport Javascript from \"./../../images/skills/js-white.webp\";\r\nimport SQL from \"./../../images/skills/sql-white.png\";\r\nimport NodeJS from \"./../../images/skills/node-white.webp\";\r\nimport ReactJS from \"./../../images/skills/react-white.webp\";\r\nimport Typescript from \"./../../images/skills/ts-white.webp\";\r\n\r\n\r\nconst Skills = props => {\r\n    const skills = [{\r\n        name: \"JAVASCRIPT\",\r\n        skill: Javascript,\r\n        skillDesc: props.t(\"javascript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"REACTJS\",\r\n        skill: ReactJS,\r\n        skillDesc: props.t(\"reactjs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"NODEJS\",\r\n        skill: NodeJS,\r\n        skillDesc: props.t(\"nodejs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"TYPESCRIPT\",\r\n        skill: Typescript,\r\n        skillDesc: props.t(\"typescript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"PYTHON\",\r\n        skill: Python,\r\n        skillDesc: props.t(\"python.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"SQL\",\r\n        skill: SQL,\r\n        skillDesc: props.t(\"postgres.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"HTML5\",\r\n        skill: HTML5,\r\n        skillDesc: props.t(\"html.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"CSS\",\r\n        skill: CSS,\r\n        skillDesc: props.t(\"css.desc\", { framework: \"react-i18next\" }),\r\n    }];\r\n    const [threshold, setThreshold] = useState(0.1)\r\n    const refs = [];\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: threshold,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(false, false, false, true, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(isMobile) {\r\n            setThreshold(0.1)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"skills\" ref={ref}>\r\n            <div ref={props.skillsRef}></div>\r\n            <div className=\"skills-header\"><h1>{props.t(\"header.skills\", { framework: \"react-i18next\" })}</h1></div>\r\n            <div className=\"skills-container\">\r\n                {\r\n                    skills.map((element, key) => {\r\n                        return (\r\n                            <>\r\n                                <Skill id={key} key={element.skill} animated={animated} name={element.name} imgSrc={element.skill} skillDescription={element.skillDesc.split(',')} />\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"skills-mnt\" id=\"contact\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills;",["50","51"],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx",["52","53","54","55","56","57","58","59","60"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from \"gsap\";\r\nimport Cloud1 from \"./../../images/skillcd.png\";\r\nimport Cloud2 from \"./../../images/skillcd2.png\";\r\nimport Cloud3 from \"./../../images/skillcd3.png\";\r\nimport \"./Skill.scss\";\r\n\r\nconst Skill = (props) => {\r\n    let skillRef = useRef(null);\r\n    let figcaptionRef = useRef(null);\r\n    let rand = Math.round(Math.random() * 2);\r\n    let randBoolean = Math.round(Math.random());\r\n\r\n    let style1 = {  backgroundImage: `url(${Cloud1})` }\r\n    let style2 = {   backgroundImage: `url(${Cloud2})` }\r\n    let style3 = { backgroundImage: `url(${Cloud3})` }\r\n    let styleMobile1 = { backgroundImage: `url(${Cloud1})` }\r\n    let styleMobile2 = { backgroundImage: `url(${Cloud2})` }\r\n    let styleMobile3 = { backgroundImage: `url(${Cloud3})` }\r\n\r\n    let style = () => {\r\n        switch (rand) {\r\n            case 0:\r\n                return style1\r\n            case 1:\r\n                return style2\r\n            case 2:\r\n                return style3\r\n        }\r\n    }\r\n\r\n    let styleMobile = () => {\r\n        switch (rand) {\r\n            case 0:\r\n                return styleMobile1\r\n            case 1:\r\n                return styleMobile2\r\n            case 2:\r\n                return styleMobile3\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.animated) {\r\n            let mtp = (props.id + 1) * 0.3;\r\n\r\n            gsap.fromTo(\r\n                skillRef,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            ).delay(mtp)\r\n        }\r\n        if (isMobile) showFigcatpion();\r\n\r\n        console.log(rand);\r\n    }, [props.animated]);\r\n\r\n    const showFigcatpion = () => {\r\n        if (!isMobile) {\r\n            gsap.fromTo(\r\n                figcaptionRef,\r\n                {\r\n                    visibility: \"hidden\",\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    visibility: \"visible\",\r\n                    duration: 1,\r\n                    opacity: 1\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideFigcatpion = () => {\r\n        if (!isMobile) {\r\n            gsap.fromTo(\r\n                figcaptionRef,\r\n                {\r\n                    visibility: \"visible\",\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    visibility: \"hidden\",\r\n                    duration: 1,\r\n                    opacity: 0\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <figure className=\"skill-figure\" ref={e => skillRef = e}>\r\n                <img src={props.imgSrc} \r\n                // onMouseOver={() => showFigcatpion()} onMouseOut={() => hideFigcatpion()} \r\n                className=\"skill-img\" />\r\n                <figcaption>\r\n                    <h3 \r\n                    // onMouseOver={() => showFigcatpion()} onMouseOut={() => hideFigcatpion()}\r\n                    >{props.name}</h3>\r\n                    <div className=\"skill-desc-container\" ref={e => figcaptionRef = e} \r\n                    // style={isMobile ? styleMobile() : style()}\r\n                    >\r\n                        <div className=\"desc-container\">\r\n                            {props.skillDescription.map(element => {\r\n                                return <>\r\n                                    <p className=\"skill-desc\">{element}</p>\r\n                                    {/* <div style={{ position: \"absolute\", borderBottom: \"2px solid #696da3\", transform: `rotate(${randBoolean ? \"-1\" : \"1\"}deg)`, width: \"100%\" }}></div>\r\n                                    <div style={{ position: \"absolute\", borderBottom: \"4px solid #696da3\", transform: `rotate(${randBoolean ? 0.5 * -1 : 0.5 * 1}deg)`, width: \"100%\" }}></div>\r\n                                    <div style={{ position: \"absolute\", borderBottom: \"3px solid #696da3\", transform: `rotate(${randBoolean ? 2 * -1 : 2 * 1}deg)`, width: \"100%\" }}></div> */}\r\n                                </>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div style={{ position: \"absolute\", height: \"10px\", width: \"100%\", bottom: \"0px\", left: \"0px\", backgroundColor: \" #696da3\" }}></div> */}\r\n                </figcaption>\r\n            </figure>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skill","C:\\Users\\wkubiak\\Desktop\\new-site\\src\\App.js",["61","62","63"],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\reportWebVitals.js",[],"C:\\Users\\wkubiak\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx",["64","65","66","67","68","69","70","71","72"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {FaRegHeart} from \"react-icons/fa\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./Contact.scss\";\r\nimport axios from \"axios\";\r\nimport { gsap } from \"gsap\";\r\nimport ln from \"./../../images/icons/linkedin.png\";\r\nimport fb from \"./../../images/icons/facebook.png\";\r\nimport git from \"./../../images/icons/git.png\";\r\nimport bgSend from \"./../../images/icons/send.png\";\r\nimport bgLoad from \"./../../images/icons/load.png\";\r\n\r\n//TODO: Fix CORS\r\nconst Contact = props => {\r\n    const [showSend, setShowSend] = useState(true);\r\n    const [send, setSend] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [animated, setAnimated] = useState(false);\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .3,\r\n    });\r\n\r\n    const styleSend = { backgroundImage: `url(${bgSend})` };\r\n    const styleLoad = { backgroundImage: `url(${bgLoad})` };\r\n\r\n    let contactHeader = useRef(null);\r\n    let contactSubHeader = useRef(null);\r\n    let contactForm = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (inView) setAnimated(true);\r\n        if (inView && !isMobile) {\r\n            props.setNavbar(false, false, false, false, true);\r\n        }\r\n    }, [inView]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (animated) {\r\n            gsap.fromTo(\r\n                contactHeader,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            );\r\n\r\n            gsap.fromTo(\r\n                contactSubHeader,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 4,\r\n                    opacity: 1\r\n                }\r\n            )\r\n\r\n            gsap.fromTo(\r\n                contactForm,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    const clearData = () => {\r\n        setEmail(\"\");\r\n        setSubject(\"\");\r\n        setContent(\"\");\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setInputDisabled(true);\r\n        setShowSend(false);\r\n\r\n        const mail = {\r\n            mail: email,\r\n            subject: subject,\r\n            content: content\r\n        };\r\n\r\n        console.log(mail);\r\n\r\n        axios.post(`https://portolio-email-sender.herokuapp.com/`, { mail })\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                clearData();\r\n                setInputDisabled(false);\r\n                setShowSend(true);\r\n                setSend(true);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                setInputDisabled(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact\" ref={ref}>\r\n            <div ref={props.contactRef}></div>\r\n            <div className=\"contact-header\">\r\n                <h1 className=\"contact-header-text\" ref={e => contactHeader = e}>{props.t(\"contact.box\", { framework: \"react-i18next\" })}</h1>\r\n                <h3 className=\"contact-subheader-text\"ref={e => contactSubHeader = e}>{props.t(\"contact.firstLine\", { framework: \"react-i18next\" })}</h3>\r\n            </div>\r\n            <form className=\"contact-form\" ref={e => contactForm = e} onSubmit={event => handleSubmit(event)}>\r\n                {!send &&\r\n                <>\r\n                <div className=\"links-container\">\r\n                    <a href=\"https://www.linkedin.com/in/wojciechkubiakin\"><img src={ln} /></a>\r\n                    <a href=\"https://www.github.com/wojciechkubiak\"><img src={git} /></a>\r\n                    <a href=\"https://www.facebook.com/wojciechkubiakfb\"><img src={fb} /></a>\r\n                </div>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.mail\", { framework: \"react-i18next\" })}</h4>\r\n                    <input type=\"text\" className=\"contact-mail-mail\" onChange={event => setEmail(event.target.value)} type=\"email\" value={email} disabled={inputDisabled || send} required />\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.subject\", { framework: \"react-i18next\" })}</h4>\r\n                    <input type=\"text\" className=\"contact-mail-subject\" onChange={event => setSubject(event.target.value)} type=\"text\" value={subject} disabled={inputDisabled || send} required />\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.message\", { framework: \"react-i18next\" })}</h4>\r\n                    <textarea type=\"text\" className=\"contact-mail-content\" onChange={event => setContent(event.target.value)} value={content} disabled={inputDisabled || send} required></textarea>\r\n                </figure>\r\n                </>\r\n                }\r\n                \r\n                {!send && <button className={showSend ? \"submit-contact-form\" : \"load-contact-form\"} type=\"submit\"></button>   }  \r\n                {send && \r\n                <>\r\n                    <h1 className=\"send-info\">{props.t(\"contact.success\", { framework: \"react-i18next\" })} <FaRegHeart/></h1>\r\n                    <h3 className=\"send-info-sub\">{props.t(\"contact.subsuccess\", { framework: \"react-i18next\" })}</h3>\r\n                </>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;",["73","74"],{"ruleId":"75","severity":1,"message":"76","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":12,"column":12,"nodeType":"77","messageId":"78","endLine":12,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":13,"column":26,"nodeType":"77","messageId":"78","endLine":13,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":29,"column":8,"nodeType":"83","endLine":29,"endColumn":16,"suggestions":"84"},{"ruleId":"75","severity":1,"message":"85","line":70,"column":61,"nodeType":"77","messageId":"78","endLine":70,"endColumn":75},{"ruleId":"75","severity":1,"message":"86","line":71,"column":61,"nodeType":"77","messageId":"78","endLine":71,"endColumn":76},{"ruleId":"75","severity":1,"message":"87","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":44},{"ruleId":"75","severity":1,"message":"76","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":14},{"ruleId":"75","severity":1,"message":"88","line":52,"column":11,"nodeType":"77","messageId":"78","endLine":52,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":54,"column":26,"nodeType":"77","messageId":"78","endLine":54,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":63,"column":8,"nodeType":"83","endLine":63,"endColumn":16,"suggestions":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"75","severity":1,"message":"94","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"95","line":13,"column":9,"nodeType":"77","messageId":"78","endLine":13,"endColumn":20},{"ruleId":"75","severity":1,"message":"96","line":22,"column":9,"nodeType":"77","messageId":"78","endLine":22,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":23,"column":9,"nodeType":"99","messageId":"100","endLine":30,"endColumn":10},{"ruleId":"75","severity":1,"message":"101","line":33,"column":9,"nodeType":"77","messageId":"78","endLine":33,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":34,"column":9,"nodeType":"99","messageId":"100","endLine":41,"endColumn":10},{"ruleId":"81","severity":1,"message":"102","line":62,"column":8,"nodeType":"83","endLine":62,"endColumn":24,"suggestions":"103"},{"ruleId":"75","severity":1,"message":"104","line":80,"column":11,"nodeType":"77","messageId":"78","endLine":80,"endColumn":25},{"ruleId":"105","severity":1,"message":"106","line":99,"column":17,"nodeType":"107","endLine":101,"endColumn":41},{"ruleId":"75","severity":1,"message":"108","line":20,"column":10,"nodeType":"77","messageId":"78","endLine":20,"endColumn":20},{"ruleId":"81","severity":1,"message":"109","line":48,"column":6,"nodeType":"83","endLine":48,"endColumn":8,"suggestions":"110"},{"ruleId":"75","severity":1,"message":"111","line":60,"column":9,"nodeType":"77","messageId":"78","endLine":60,"endColumn":22},{"ruleId":"75","severity":1,"message":"80","line":23,"column":26,"nodeType":"77","messageId":"78","endLine":23,"endColumn":31},{"ruleId":"75","severity":1,"message":"112","line":27,"column":11,"nodeType":"77","messageId":"78","endLine":27,"endColumn":20},{"ruleId":"75","severity":1,"message":"113","line":28,"column":11,"nodeType":"77","messageId":"78","endLine":28,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":39,"column":8,"nodeType":"83","endLine":39,"endColumn":16,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"106","line":125,"column":76,"nodeType":"107","endLine":125,"endColumn":92},{"ruleId":"105","severity":1,"message":"106","line":126,"column":69,"nodeType":"107","endLine":126,"endColumn":86},{"ruleId":"105","severity":1,"message":"106","line":127,"column":73,"nodeType":"107","endLine":127,"endColumn":89},{"ruleId":"115","severity":1,"message":"116","line":131,"column":119,"nodeType":"117","endLine":131,"endColumn":131},{"ruleId":"115","severity":1,"message":"116","line":135,"column":124,"nodeType":"117","endLine":135,"endColumn":135},{"ruleId":"90","replacedBy":"118"},{"ruleId":"92","replacedBy":"119"},"no-unused-vars","'gsap' is defined but never used.","Identifier","unusedVar","'animated' is assigned a value but never used.","'entry' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["120"],"'aboutHeaderRef' is assigned a value but never used.","'aboutContentRef' is assigned a value but never used.","'useRef' is defined but never used.","'refs' is assigned a value but never used.",["121"],"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'useState' is defined but never used.","'randBoolean' is assigned a value but never used.","'style' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'styleMobile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'rand'. Either include them or remove the dependency array.",["124"],"'hideFigcatpion' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'aboutStyle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNavbar'. Either include it or remove the dependency array.",["125"],"'showLanguages' is assigned a value but never used.","'styleSend' is assigned a value but never used.","'styleLoad' is assigned a value but never used.",["126"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["122"],["123"],{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"127","fix":"134"},"Update the dependencies array to be: [inView, props]",{"range":"135","text":"136"},{"range":"137","text":"136"},"Update the dependencies array to be: [props.animated, props.id, rand]",{"range":"138","text":"139"},"Update the dependencies array to be: [setNavbar]",{"range":"140","text":"141"},{"range":"142","text":"136"},[961,969],"[inView, props]",[2297,2305],[1797,1813],"[props.animated, props.id, rand]",[1852,1854],"[setNavbar]",[1475,1483]]