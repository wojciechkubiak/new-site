[{"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\index.js":"1","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\reportWebVitals.js":"2","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\App.js":"3","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Projects\\Projects.jsx":"4","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx":"5","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx":"6","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Name\\Name.jsx":"7","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\About\\About.jsx":"8","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx":"9","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx":"10"},{"size":681,"mtime":1607450480566,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607191477882,"results":"13","hashOfConfig":"12"},{"size":4147,"mtime":1607545474008,"results":"14","hashOfConfig":"12"},{"size":3019,"mtime":1607464373661,"results":"15","hashOfConfig":"12"},{"size":3285,"mtime":1607539744525,"results":"16","hashOfConfig":"12"},{"size":4411,"mtime":1607538130457,"results":"17","hashOfConfig":"12"},{"size":1179,"mtime":1607459163881,"results":"18","hashOfConfig":"12"},{"size":2383,"mtime":1607539715732,"results":"19","hashOfConfig":"12"},{"size":1079,"mtime":1607462568519,"results":"20","hashOfConfig":"12"},{"size":216,"mtime":1607258386491,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11rmdf6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\index.js",[],["50","51"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\reportWebVitals.js",[],["52","53"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\App.js",["54","55","56","57"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Projects\\Projects.jsx",["58","59","60"],"import React, {useRef, useEffect, useState} from \"react\";\r\nimport \"./Projects.scss\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from \"gsap\";\r\nimport ObbSys from \"./../../images/1.png\";\r\nimport OpqnWeb from \"./../../images/3.png\";\r\n\r\n//TODO: Fill projects container\r\nconst Projects = props => {\r\n    const projects = [{ img: ObbSys, header: \"OBBSYS\"}, {img: OpqnWeb, header: \"OPQN\"}];\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .6,\r\n    });\r\n\r\n    let projectsHeader = useRef(null);\r\n    let projectsFirst = useRef(null);\r\n    let projectsSecond = useRef(null);\r\n\r\n    let t1 = gsap.timeline();\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(false, false, true, false, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(animated) {\r\n            gsap.fromTo(\r\n                projectsHeader,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 2,\r\n                    opacity: 1\r\n                }\r\n            )\r\n\r\n            t1.fromTo(\r\n                projectsFirst,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            ).fromTo(\r\n                projectsSecond,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    return (\r\n        <div className=\"projects\" ref={ref}>\r\n            <div className=\"projects-header\" ref={e => projectsHeader = e}><h1>{props.t(\"header.projects\", { framework: \"react-i18next\" })}</h1></div>\r\n            <div className=\"projects-data\" ref={e => projectsFirst = e}>\r\n                <div className=\"projects-img-container\">\r\n                    <img alt=\"alt\" className=\"projects-img\" src={projects[0].img} />\r\n                </div>\r\n                <div className=\"projects-info\">\r\n                    <h2>{projects[0].header}</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"projects-data\" ref={e => projectsSecond = e}>\r\n                <div className=\"projects-img-container\">\r\n                    <img alt=\"alt\" className=\"projects-img\" src={projects[1].img} />\r\n                </div>\r\n                <div className=\"projects-info\">\r\n                    <h2>{projects[1].header}</h2>\r\n                </div>\r\n            </div>\r\n            <div ref={props.skillsRef} className=\"projects-mnt-bt\" id=\"skills\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx",["61","62","63","64","65"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from 'gsap';\r\nimport \"./Skills.scss\";\r\nimport Skill from \"./../../components/Skill/Skill\";\r\nimport Angular from \"./../../images/skills/white_empty_angular.png\";\r\nimport CSS from \"./../../images/skills/white_empty_css.webp\";\r\nimport HTML5 from \"./../../images/skills/white_empty_html.webp\";\r\nimport Javascript from \"./../../images/skills/white_empty_js.webp\";\r\nimport SQL from \"./../../images/skills/white_empty_sql.png\";\r\nimport NodeJS from \"./../../images/skills/white_empty_nodejs.webp\";\r\nimport ReactJS from \"./../../images/skills/white_empty_react.webp\";\r\nimport Typescript from \"./../../images/skills/white_empty_typescript.webp\";\r\n\r\n\r\nconst Skills = props => {\r\n    const skills = [{\r\n        name: \"JAVASCRIPT\",\r\n        skill: Javascript,\r\n        skillDesc: props.t(\"javascript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"REACTJS\",\r\n        skill: ReactJS,\r\n        skillDesc: props.t(\"reactjs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"NODEJS\",\r\n        skill: NodeJS,\r\n        skillDesc: props.t(\"nodejs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"ANGULAR\",\r\n        skill: Angular,\r\n        skillDesc: props.t(\"javascript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"TYPESCRIPT\",\r\n        skill: Typescript,\r\n        skillDesc: props.t(\"typescript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"SQL\",\r\n        skill: SQL,\r\n        skillDesc: props.t(\"postgres.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"HTML5\",\r\n        skill: HTML5,\r\n        skillDesc: props.t(\"html.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"CSS\",\r\n        skill: CSS,\r\n        skillDesc: props.t(\"css.desc\", { framework: \"react-i18next\" }),\r\n    }];\r\n    const [threshold, setThreshold] = useState(0.4)\r\n    const refs = [];\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: threshold,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(false, false, false, true, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(isMobile) {\r\n            setThreshold(0.1)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"skills\" ref={ref}>\r\n            <div className=\"skills-header\"><h1>{props.t(\"header.skills\", { framework: \"react-i18next\" })}</h1></div>\r\n            <div className=\"skills-container\">\r\n                {\r\n                    skills.map((element, key) => {\r\n                        return (\r\n                            <>\r\n                                <Skill id={key} key={element.skill} animated={animated} name={element.name} imgSrc={element.skill} skillDescription={element.skillDesc.split(',')} />\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"skills-mnt\" id=\"contact\" ref={props.contactRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx",["66","67","68","69","70","71","72"],"import React, { useState, useEffect, useRef} from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./Contact.scss\";\r\nimport axios from \"axios\";\r\nimport { gsap } from \"gsap\";\r\nimport ln from \"./../../images/icons/linkedin.png\";\r\nimport fb from \"./../../images/icons/facebook.png\";\r\nimport git from \"./../../images/icons/git.png\";\r\n\r\n//TODO: Fix CORS\r\nconst Contact = props => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .5,\r\n    });\r\n\r\n    let contactHeader = useRef(null);\r\n    let contactSubHeader = useRef(null);\r\n    let contactForm = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(false, false, false, false, true);\r\n        }\r\n    }, [inView]);\r\n\r\n\r\n    useEffect(() => {\r\n        if(animated) {\r\n            gsap.fromTo(\r\n                contactHeader,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            );\r\n\r\n            gsap.fromTo(\r\n                contactSubHeader,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 4,\r\n                    opacity: 1\r\n                }\r\n            )\r\n\r\n            gsap.fromTo(\r\n                contactForm,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    const clearData = () => {\r\n        setEmail(\"\");\r\n        setSubject(\"\");\r\n        setContent(\"\");\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n    \r\n        const mail = {\r\n          mail: email,\r\n          subject: subject,\r\n          content: content\r\n        };\r\n    \r\n        console.log(mail);\r\n        \r\n        axios.post(`https://portolio-email-sender.herokuapp.com/`, { mail })\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            clearData();\r\n          })\r\n      }\r\n\r\n    return (\r\n        <div className=\"contact\" ref={ref}>\r\n           <div className=\"contact-header\">\r\n               <h1 ref={e => contactHeader = e}>{props.t(\"contact.box\", { framework: \"react-i18next\" })}</h1>\r\n               <h3 ref={e => contactSubHeader = e}>{props.t(\"contact.firstLine\", { framework: \"react-i18next\" })}</h3>\r\n           </div>\r\n           <form className=\"contact-form\" ref={e => contactForm = e} onSubmit={event => handleSubmit(event)}>\r\n                <div className=\"links-container\">\r\n                    <a href=\"https://www.linkedin.com/in/wojciechkubiakin\"><img src={ln}/></a>\r\n                    <a href=\"https://www.github.com/wojciechkubiak\"><img src={git}/></a>\r\n                    <a href=\"https://www.facebook.com/wojciechkubiakfb\"><img src={fb}/></a>\r\n                </div>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.mail\", { framework: \"react-i18next\" })}</h4>\r\n                    <input type=\"text\" className=\"contact-mail-mail\" onChange={event => setEmail(event.target.value)} type=\"email\" value={email} required/>\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.subject\", { framework: \"react-i18next\" })}</h4>    \r\n                    <input type=\"text\" className=\"contact-mail-subject\" onChange={event => setSubject(event.target.value)} type=\"text\" value={subject} required/>\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.message\", { framework: \"react-i18next\" })}</h4>\r\n                    <textarea type=\"text\" className=\"contact-mail-content\" onChange={event => setContent(event.target.value)} value={content} required></textarea>\r\n                </figure>\r\n                <button className=\"submit-contact-form\" type=\"submit\"></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Name\\Name.jsx",["73","74"],"import React, { useEffect, useState, useRef} from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from \"gsap\";\r\nimport \"./Name.scss\";\r\n\r\nconst Name = props => {\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .8,\r\n    });\r\n\r\n    let headerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(true, false, false, false, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(animated) {\r\n            gsap.fromTo(\r\n                headerRef,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    return (\r\n        <div className=\"about\" ref={ref}>\r\n            <div className=\"about-header\" ref={(e) => (headerRef = e)}>\r\n                <h1>WOJCIECH KUBIAK</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\About\\About.jsx",["75","76"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./About.scss\";\r\nimport { gsap } from \"gsap\";\r\n\r\nimport ResumePL from \"./../../docs/cvpl.pdf\";\r\nimport ResumeEN from \"./../../docs/cven.pdf\";\r\n\r\nconst About = props => {\r\n    const [resume, setResume] = useState(ResumeEN);\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .5,\r\n    });\r\n    \r\n    let aboutHeaderRef = useRef(null);\r\n    let aboutContentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(!isMobile) props.navbarDarkHandler(inView);\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(animated) {\r\n            gsap.fromTo(\r\n                aboutHeaderRef,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            );\r\n\r\n            gsap.fromTo(\r\n                aboutContentRef,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 1.5,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    useEffect(() => {\r\n        if(props.lang === \"pl\") {\r\n            setResume(ResumePL)\r\n        } else {\r\n            setResume(ResumeEN)\r\n        }\r\n    }, [props.lang])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"about-info\" id=\"about\" ref={ref}>\r\n            <h1 className=\"about-info-header\" ref={e => aboutHeaderRef = e}>{props.t(\"header.about\", { framework: \"react-i18next\" })}</h1>\r\n            <p className=\"about-info-content\" ref={e => aboutContentRef = e}>{props.t(\"aboutme.content\", { framework: \"react-i18next\" })}\r\n                <a\r\n                    className=\"about-resume-link\"\r\n                    href={resume}\r\n                    download={`WojciechKubiakCV_${props.lang.toUpperCase()}.pdf`}\r\n                >\r\n                    {props.t(\"here.text\", { framework: \"react-i18next\" })}\r\n                </a>\r\n                .\r\n            </p>\r\n            <div className=\"projects-mnt\" id=\"projects\" ref={props.projectsRef}></div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx",["77","78","79"],"import React, {useState, useEffect, useRef} from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport \"./Skill.scss\";\r\n\r\nconst Skill = (props) => {\r\n    let skillRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(props.animated) {\r\n            let mtp = (props.id + 1) * 0.3;\r\n           \r\n            gsap.fromTo(\r\n                skillRef,\r\n                {\r\n                    opacity: 0\r\n                }, \r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            ).delay(mtp);\r\n        }\r\n    }, [props.animated]);\r\n\r\n    return (\r\n        <>\r\n            <figure className=\"skill-figure\" ref={e => skillRef = e}>\r\n                <img src={props.imgSrc} className=\"skill-img\"/>\r\n                <figcaption>\r\n                    <h3>{props.name}</h3>\r\n                    {props.skillDescription.map(element => {\r\n                        return <p className=\"skill-desc\">{element}</p>\r\n                    })}\r\n                </figcaption>\r\n            </figure>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skill","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":19,"column":10,"nodeType":"88","messageId":"89","endLine":19,"endColumn":20},{"ruleId":"86","severity":1,"message":"90","line":26,"column":9,"nodeType":"88","messageId":"89","endLine":26,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":43,"column":6,"nodeType":"93","endLine":43,"endColumn":8,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":56,"column":9,"nodeType":"88","messageId":"89","endLine":56,"endColumn":22},{"ruleId":"86","severity":1,"message":"96","line":13,"column":26,"nodeType":"88","messageId":"89","endLine":13,"endColumn":31},{"ruleId":"91","severity":1,"message":"97","line":28,"column":8,"nodeType":"93","endLine":28,"endColumn":16,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":67,"column":8,"nodeType":"93","endLine":67,"endColumn":18,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"102","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"86","severity":1,"message":"103","line":52,"column":11,"nodeType":"88","messageId":"89","endLine":52,"endColumn":15},{"ruleId":"86","severity":1,"message":"96","line":54,"column":26,"nodeType":"88","messageId":"89","endLine":54,"endColumn":31},{"ruleId":"91","severity":1,"message":"97","line":63,"column":8,"nodeType":"93","endLine":63,"endColumn":16,"suggestions":"104"},{"ruleId":"86","severity":1,"message":"96","line":17,"column":26,"nodeType":"88","messageId":"89","endLine":17,"endColumn":31},{"ruleId":"91","severity":1,"message":"97","line":30,"column":8,"nodeType":"93","endLine":30,"endColumn":16,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":105,"column":76,"nodeType":"108","endLine":105,"endColumn":91},{"ruleId":"106","severity":1,"message":"107","line":106,"column":69,"nodeType":"108","endLine":106,"endColumn":85},{"ruleId":"106","severity":1,"message":"107","line":107,"column":73,"nodeType":"108","endLine":107,"endColumn":88},{"ruleId":"109","severity":1,"message":"110","line":111,"column":119,"nodeType":"111","endLine":111,"endColumn":131},{"ruleId":"109","severity":1,"message":"110","line":115,"column":124,"nodeType":"111","endLine":115,"endColumn":135},{"ruleId":"86","severity":1,"message":"96","line":9,"column":26,"nodeType":"88","messageId":"89","endLine":9,"endColumn":31},{"ruleId":"91","severity":1,"message":"97","line":20,"column":8,"nodeType":"93","endLine":20,"endColumn":16,"suggestions":"112"},{"ruleId":"86","severity":1,"message":"96","line":13,"column":26,"nodeType":"88","messageId":"89","endLine":13,"endColumn":31},{"ruleId":"91","severity":1,"message":"97","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":16,"suggestions":"113"},{"ruleId":"86","severity":1,"message":"114","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"115","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":24,"suggestions":"116"},{"ruleId":"106","severity":1,"message":"107","line":28,"column":17,"nodeType":"108","endLine":28,"endColumn":64},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],"no-unused-vars","'aboutStyle' is assigned a value but never used.","Identifier","unusedVar","'aboutRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNavbar'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'showLanguages' is assigned a value but never used.","'entry' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["120"],"React Hook useEffect has a missing dependency: 't1'. Either include it or remove the dependency array.",["121"],"'useRef' is defined but never used.","'gsap' is defined but never used.","'refs' is assigned a value but never used.",["122"],["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["124"],["125"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"129","fix":"133"},{"desc":"129","fix":"134"},{"desc":"129","fix":"135"},{"desc":"129","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [setNavbar]",{"range":"139","text":"140"},"Update the dependencies array to be: [inView, props]",{"range":"141","text":"142"},"Update the dependencies array to be: [animated, t1]",{"range":"143","text":"144"},{"range":"145","text":"142"},{"range":"146","text":"142"},{"range":"147","text":"142"},{"range":"148","text":"142"},"Update the dependencies array to be: [props.animated, props.id]",{"range":"149","text":"150"},[1626,1628],"[setNavbar]",[935,943],"[inView, props]",[1879,1889],"[animated, t1]",[2367,2375],[1033,1041],[599,607],[748,756],[564,580],"[props.animated, props.id]"]