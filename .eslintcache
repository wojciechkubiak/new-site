[{"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\index.js":"1","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\reportWebVitals.js":"2","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\App.js":"3","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Projects\\Projects.jsx":"4","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx":"5","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx":"6","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Name\\Name.jsx":"7","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\About\\About.jsx":"8","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx":"9","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx":"10"},{"size":712,"mtime":1608757205653,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607191477882,"results":"13","hashOfConfig":"14"},{"size":4248,"mtime":1608771365741,"results":"15","hashOfConfig":"12"},{"size":7017,"mtime":1609018443185,"results":"16","hashOfConfig":"12"},{"size":3215,"mtime":1609017829776,"results":"17","hashOfConfig":"12"},{"size":5800,"mtime":1609018402402,"results":"18","hashOfConfig":"12"},{"size":1410,"mtime":1609279942140,"results":"19","hashOfConfig":"12"},{"size":2664,"mtime":1608835242931,"results":"20","hashOfConfig":"12"},{"size":4486,"mtime":1608888250165,"results":"21","hashOfConfig":"12"},{"size":290,"mtime":1608757205572,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"g3zwje",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11rmdf6",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\index.js",[],["51","52"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\reportWebVitals.js",[],["53","54"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\App.js",["55","56","57"],"C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Projects\\Projects.jsx",["58","59","60","61","62","63","64","65","66","67","68","69","70"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./Projects.scss\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from \"gsap\";\r\nimport {AiOutlineInfoCircle} from \"react-icons/ai\";\r\nimport ObbSys from \"./../../images/1.png\";\r\nimport OpqnWeb from \"./../../images/3.png\";\r\nimport Javascript from \"./../../images/skills/js-white.webp\";\r\nimport SQL from \"./../../images/skills/sql-white.png\";\r\nimport NodeJS from \"./../../images/skills/node-white.webp\";\r\nimport ReactJS from \"./../../images/skills/react-white.webp\";\r\nimport Typescript from \"./../../images/skills/ts-white.webp\";\r\nimport SubinfoBg1 from \"./../../images/projinfo.png\";\r\nimport SubinfoBg2 from \"./../../images/projinfo2.png\";\r\nimport Git from \"./../../images/git.png\"\r\n\r\nconst Projects = props => {\r\n    const [showFirstInfo, setShowFirstInfo] = useState(false);\r\n    const [showSecondInfo, setShowSecondInfo] = useState(false);\r\n\r\n    const projects = [{ \r\n        img: ObbSys, header: \"OBBSYS\", body: props.t(\"projects.obbsysAbout\", { framework: \"react-i18next\" }),\r\n        technologiesUsed: [Javascript, ReactJS, NodeJS, SQL]\r\n    }, { \r\n        img: OpqnWeb, header: \"FITTRACKER\", body: props.t(\"projects.fittrackerAbout\", { framework: \"react-i18next\" }),\r\n        technologiesUsed: [Typescript, ReactJS, NodeJS, SQL]\r\n    }];\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .3,\r\n    });\r\n\r\n    const showHandler = (f,) => f(true);\r\n    const hideHandler = (f) => f(false);\r\n\r\n    let projectsHeader = useRef(null);\r\n    let projectsFirst = useRef(null);\r\n    let projectsSecond = useRef(null);\r\n    let subinfo = useRef(null);\r\n    let t1 = gsap.timeline();\r\n\r\n    useEffect(() => {\r\n        if (inView) setAnimated(true);\r\n        if (inView && !isMobile) {\r\n            props.setNavbar(false, false, true, false, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if (animated) {\r\n            gsap.fromTo(\r\n                projectsHeader,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 2,\r\n                    opacity: 1\r\n                }\r\n            )\r\n\r\n            t1.fromTo(\r\n                projectsFirst,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            ).fromTo(\r\n                projectsSecond,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            ).fromTo(\r\n                subinfo, {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    return (\r\n        <div className=\"projects\" ref={ref}>\r\n            <div className=\"projects-header\" ref={e => projectsHeader = e}><h1>{props.t(\"header.projects\", { framework: \"react-i18next\" })}</h1></div>\r\n            <div className=\"projects-data-container\">\r\n                <div className=\"projects-data\" ref={e => projectsFirst = e}>\r\n                    <div className=\"projects-img-container\">\r\n                        {showFirstInfo && (\r\n                            <div className=\"projects-over-info\">\r\n                                {showFirstInfo && (<button style={{position: \"absolute\", height: \"25px\", width: \"25px\", outline: \"none\", right: \"5px\", top: \"5px\", backgroundColor: \"transparent\", border: \"none\", color: \"rgba(255, 255, 255, .8)\", zIndex: \"2000\"}} onClick={() => hideHandler(setShowFirstInfo)}>X</button>)}\r\n                                <div className=\"projects-over-info-git\">\r\n                                <a href=\"https://github.com/wojciechkubiak/opqn-web\"><img src={Git} alt=\"git\"/></a>\r\n                                </div>\r\n                                <div className=\"projects-over-info-tech\">\r\n                                    <img src={Javascript}/>\r\n                                    <img src={ReactJS}/>\r\n                                    <img src={NodeJS}/>\r\n                                    <img src={SQL}/>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <span className=\"helper\"></span><img alt=\"alt\" className=\"projects-img\" src={projects[0].img} />\r\n                    </div>\r\n                    <div className=\"projects-info\">\r\n                        <h2>{projects[0].header}<AiOutlineInfoCircle onClick={() => showHandler(setShowFirstInfo)}/></h2>\r\n                        <p>{projects[0].body}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"projects-data\" ref={e => projectsSecond = e}>\r\n                <div className=\"projects-img-container\">\r\n                        {showSecondInfo && (\r\n                            <div className=\"projects-over-info\">\r\n                                {showSecondInfo && (<button style={{position: \"absolute\", height: \"25px\", width: \"25px\", outline: \"none\", right: \"5px\", top: \"5px\", backgroundColor: \"transparent\", border: \"none\", color: \"rgba(255, 255, 255, .8)\", zIndex: \"2000\"}} onClick={() => hideHandler(setShowSecondInfo)}>X</button>)}\r\n                                <div className=\"projects-over-info-git\">\r\n                                <a href=\"https://github.com/wojciechkubiak/obb-web\"><img src={Git} alt=\"git\"/></a>\r\n                                </div>\r\n                                <div className=\"projects-over-info-tech\">\r\n                                    <img src={Typescript}/>\r\n                                    <img src={ReactJS}/>\r\n                                    <img src={NodeJS}/>\r\n                                    <img src={SQL}/>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <span className=\"helper\"></span><img alt=\"alt\" className=\"projects-img\" src={projects[1].img} />\r\n                    </div>\r\n                    <div className=\"projects-info\" \r\n                    >\r\n                        <h2>{projects[1].header}<AiOutlineInfoCircle onClick={() => showHandler(setShowSecondInfo)}/></h2>\r\n                        <p>{projects[1].body}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h2 className=\"projects-subheader\" ref={e => subinfo = e}>... {props.t(\"subinfo.content\", { framework: \"react-i18next\" })}</h2>\r\n            <div ref={props.skillsRef} className=\"projects-mnt-bt\" id=\"skills\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Skills\\Skills.jsx",["71","72","73","74","75"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from 'gsap';\r\nimport \"./Skills.scss\";\r\nimport Skill from \"./../../components/Skill/Skill\";\r\nimport Python from \"./../../images/skills/py-white.png\";\r\nimport CSS from \"./../../images/skills/css-white.webp\";\r\nimport HTML5 from \"./../../images/skills/html-white.webp\";\r\nimport Javascript from \"./../../images/skills/js-white.webp\";\r\nimport SQL from \"./../../images/skills/sql-white.png\";\r\nimport NodeJS from \"./../../images/skills/node-white.webp\";\r\nimport ReactJS from \"./../../images/skills/react-white.webp\";\r\nimport Typescript from \"./../../images/skills/ts-white.webp\";\r\n\r\n\r\nconst Skills = props => {\r\n    const skills = [{\r\n        name: \"JAVASCRIPT\",\r\n        skill: Javascript,\r\n        skillDesc: props.t(\"javascript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"REACTJS\",\r\n        skill: ReactJS,\r\n        skillDesc: props.t(\"reactjs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"NODEJS\",\r\n        skill: NodeJS,\r\n        skillDesc: props.t(\"nodejs.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"TYPESCRIPT\",\r\n        skill: Typescript,\r\n        skillDesc: props.t(\"typescript.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"PYTHON\",\r\n        skill: Python,\r\n        skillDesc: props.t(\"python.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"SQL\",\r\n        skill: SQL,\r\n        skillDesc: props.t(\"postgres.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"HTML5\",\r\n        skill: HTML5,\r\n        skillDesc: props.t(\"html.desc\", { framework: \"react-i18next\" }),\r\n    }, {\r\n        name: \"CSS\",\r\n        skill: CSS,\r\n        skillDesc: props.t(\"css.desc\", { framework: \"react-i18next\" }),\r\n    }];\r\n    const [threshold, setThreshold] = useState(0.1)\r\n    const refs = [];\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: threshold,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(inView) setAnimated(true);\r\n        if(inView && !isMobile) {\r\n            props.setNavbar(false, false, false, true, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if(isMobile) {\r\n            setThreshold(0.1)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"skills\" ref={ref}>\r\n            <div className=\"skills-header\"><h1>{props.t(\"header.skills\", { framework: \"react-i18next\" })}</h1></div>\r\n            <div className=\"skills-container\">\r\n                {\r\n                    skills.map((element, key) => {\r\n                        return (\r\n                            <>\r\n                                <Skill id={key} key={element.skill} animated={animated} name={element.name} imgSrc={element.skill} skillDescription={element.skillDesc.split(',')} />\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"skills-mnt\" id=\"contact\" ref={props.contactRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Contact\\Contact.jsx",["76","77","78","79","80","81","82","83","84"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport {FaRegHeart} from \"react-icons/fa\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./Contact.scss\";\r\nimport axios from \"axios\";\r\nimport { gsap } from \"gsap\";\r\nimport ln from \"./../../images/icons/linkedin.png\";\r\nimport fb from \"./../../images/icons/facebook.png\";\r\nimport git from \"./../../images/icons/git.png\";\r\nimport bgSend from \"./../../images/icons/send.png\";\r\nimport bgLoad from \"./../../images/icons/load.png\";\r\n\r\n//TODO: Fix CORS\r\nconst Contact = props => {\r\n    const [showSend, setShowSend] = useState(true);\r\n    const [send, setSend] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [animated, setAnimated] = useState(false);\r\n    const [inputDisabled, setInputDisabled] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .3,\r\n    });\r\n\r\n    const styleSend = { backgroundImage: `url(${bgSend})` };\r\n    const styleLoad = { backgroundImage: `url(${bgLoad})` };\r\n\r\n    let contactHeader = useRef(null);\r\n    let contactSubHeader = useRef(null);\r\n    let contactForm = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (inView) setAnimated(true);\r\n        if (inView && !isMobile) {\r\n            props.setNavbar(false, false, false, false, true);\r\n        }\r\n    }, [inView]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (animated) {\r\n            gsap.fromTo(\r\n                contactHeader,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            );\r\n\r\n            gsap.fromTo(\r\n                contactSubHeader,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 4,\r\n                    opacity: 1\r\n                }\r\n            )\r\n\r\n            gsap.fromTo(\r\n                contactForm,\r\n                {\r\n                    opacity: 0,\r\n                    bottom: -100\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    bottom: 0,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    const clearData = () => {\r\n        setEmail(\"\");\r\n        setSubject(\"\");\r\n        setContent(\"\");\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setInputDisabled(true);\r\n        setShowSend(false);\r\n\r\n        const mail = {\r\n            mail: email,\r\n            subject: subject,\r\n            content: content\r\n        };\r\n\r\n        console.log(mail);\r\n\r\n        axios.post(`https://portolio-email-sender.herokuapp.com/`, { mail })\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(res.data);\r\n                clearData();\r\n                setInputDisabled(false);\r\n                setShowSend(true);\r\n                setSend(true);\r\n            }).catch(error => {\r\n                console.log(error);\r\n                setInputDisabled(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact\" ref={ref}>\r\n            <div className=\"contact-header\">\r\n                <h1 className=\"contact-header-text\" ref={e => contactHeader = e}>{props.t(\"contact.box\", { framework: \"react-i18next\" })}</h1>\r\n                <h3 className=\"contact-subheader-text\"ref={e => contactSubHeader = e}>{props.t(\"contact.firstLine\", { framework: \"react-i18next\" })}</h3>\r\n            </div>\r\n            <form className=\"contact-form\" ref={e => contactForm = e} onSubmit={event => handleSubmit(event)}>\r\n                {!send &&\r\n                <>\r\n                <div className=\"links-container\">\r\n                    <a href=\"https://www.linkedin.com/in/wojciechkubiakin\"><img src={ln} /></a>\r\n                    <a href=\"https://www.github.com/wojciechkubiak\"><img src={git} /></a>\r\n                    <a href=\"https://www.facebook.com/wojciechkubiakfb\"><img src={fb} /></a>\r\n                </div>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.mail\", { framework: \"react-i18next\" })}</h4>\r\n                    <input type=\"text\" className=\"contact-mail-mail\" onChange={event => setEmail(event.target.value)} type=\"email\" value={email} disabled={inputDisabled || send} required />\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.subject\", { framework: \"react-i18next\" })}</h4>\r\n                    <input type=\"text\" className=\"contact-mail-subject\" onChange={event => setSubject(event.target.value)} type=\"text\" value={subject} disabled={inputDisabled || send} required />\r\n                </figure>\r\n                <figure>\r\n                    <h4>{props.t(\"contact.message\", { framework: \"react-i18next\" })}</h4>\r\n                    <textarea type=\"text\" className=\"contact-mail-content\" onChange={event => setContent(event.target.value)} value={content} disabled={inputDisabled || send} required></textarea>\r\n                </figure>\r\n                </>\r\n                }\r\n                \r\n                {!send && <button className={showSend ? \"submit-contact-form\" : \"load-contact-form\"} type=\"submit\"></button>   }  \r\n                {send && \r\n                <>\r\n                    <h1 className=\"send-info\">{props.t(\"contact.success\", { framework: \"react-i18next\" })} <FaRegHeart/></h1>\r\n                    <h3 className=\"send-info-sub\">{props.t(\"contact.subsuccess\", { framework: \"react-i18next\" })}</h3>\r\n                </>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Name\\Name.jsx",["85","86"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport {CgArrowLongDown} from \"react-icons/cg\";\r\nimport { gsap } from \"gsap\";\r\nimport \"./Name.scss\";\r\n\r\nconst Name = props => {\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .8,\r\n    });\r\n\r\n    let headerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (inView) setAnimated(true);\r\n        if (inView && !isMobile) {\r\n            props.setNavbar(true, false, false, false, false)\r\n        }\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if (animated) {\r\n            gsap.fromTo(\r\n                headerRef,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    return (\r\n        <div className=\"about\" ref={ref}>\r\n            <div className=\"about-header\" ref={(e) => (headerRef = e)}>\r\n                <h1>WOJCIECH KUBIAK</h1>     \r\n            </div>\r\n            {isMobile && props.showMainBtn && <button className=\"about-btn\" onClick={() => props.aboutMoveHandler()}><CgArrowLongDown size={54} color=\"white\"/></button>}   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\About\\About.jsx",["87","88"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { isMobile } from 'react-device-detect';\r\nimport \"./About.scss\";\r\nimport { gsap } from \"gsap\";\r\n\r\nimport ResumePL from \"./../../docs/cvpl.pdf\";\r\nimport ResumeEN from \"./../../docs/cven.pdf\";\r\n\r\nconst About = props => {\r\n    const [resume, setResume] = useState(ResumeEN);\r\n    const [animated, setAnimated] = useState(false);\r\n    const { ref, inView, entry } = useInView({\r\n        threshold: .5,\r\n    });\r\n\r\n    let aboutHeaderRef = useRef(null);\r\n    let aboutContentRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (inView) setAnimated(true);\r\n        if (inView && isMobile) props.setShowMainBtn(false);\r\n        if (!isMobile) props.navbarDarkHandler(inView);\r\n    }, [inView]);\r\n\r\n    useEffect(() => {\r\n        if (animated) {\r\n            gsap.fromTo(\r\n                aboutHeaderRef,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            );\r\n\r\n            gsap.fromTo(\r\n                aboutContentRef,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1.5,\r\n                    opacity: 1\r\n                }\r\n            )\r\n        }\r\n    }, [animated]);\r\n\r\n    useEffect(() => {\r\n        if (props.lang === \"pl\") {\r\n            setResume(ResumePL)\r\n        } else {\r\n            setResume(ResumeEN)\r\n        }\r\n    }, [props.lang])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"about-info\" id=\"about\" ref={ref} >\r\n                <div ref={props.aboutRef}>\r\n                    {/* TODO: header flashing if scrolled fast - turn off anim? */}\r\n                <h1 className=\"about-info-header\" ref={e => aboutHeaderRef = e}>{props.t(\"header.about\", { framework: \"react-i18next\" })}</h1>\r\n                <p className=\"about-info-content\" ref={e => aboutContentRef = e}>{props.t(\"aboutme.content\", { framework: \"react-i18next\" })}\r\n                    <a\r\n                        className=\"about-resume-link\"\r\n                        href={resume}\r\n                        download={`WojciechKubiakCV_${props.lang.toUpperCase()}.pdf`}\r\n                    >\r\n                        {props.t(\"here.text\", { framework: \"react-i18next\" })}\r\n                    </a>\r\n                .\r\n                </p>\r\n                <div className=\"projects-mnt\" id=\"projects\" ref={props.projectsRef}></div>\r\n                </div>               \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\components\\Skill\\Skill.jsx",["89","90","91","92","93","94","95","96","97"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { isMobile } from 'react-device-detect';\r\nimport { gsap } from \"gsap\";\r\nimport Cloud1 from \"./../../images/skillcd.png\";\r\nimport Cloud2 from \"./../../images/skillcd2.png\";\r\nimport Cloud3 from \"./../../images/skillcd3.png\";\r\nimport \"./Skill.scss\";\r\n\r\nconst Skill = (props) => {\r\n    let skillRef = useRef(null);\r\n    let figcaptionRef = useRef(null);\r\n    let rand = Math.round(Math.random() * 2);\r\n    let randBoolean = Math.round(Math.random());\r\n\r\n    let style1 = {  backgroundImage: `url(${Cloud1})` }\r\n    let style2 = {   backgroundImage: `url(${Cloud2})` }\r\n    let style3 = { backgroundImage: `url(${Cloud3})` }\r\n    let styleMobile1 = { backgroundImage: `url(${Cloud1})` }\r\n    let styleMobile2 = { backgroundImage: `url(${Cloud2})` }\r\n    let styleMobile3 = { backgroundImage: `url(${Cloud3})` }\r\n\r\n    let style = () => {\r\n        switch (rand) {\r\n            case 0:\r\n                return style1\r\n            case 1:\r\n                return style2\r\n            case 2:\r\n                return style3\r\n        }\r\n    }\r\n\r\n    let styleMobile = () => {\r\n        switch (rand) {\r\n            case 0:\r\n                return styleMobile1\r\n            case 1:\r\n                return styleMobile2\r\n            case 2:\r\n                return styleMobile3\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.animated) {\r\n            let mtp = (props.id + 1) * 0.3;\r\n\r\n            gsap.fromTo(\r\n                skillRef,\r\n                {\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    duration: 1,\r\n                    opacity: 1\r\n                }\r\n            ).delay(mtp)\r\n        }\r\n        if (isMobile) showFigcatpion();\r\n\r\n        console.log(rand);\r\n    }, [props.animated]);\r\n\r\n    const showFigcatpion = () => {\r\n        if (!isMobile) {\r\n            gsap.fromTo(\r\n                figcaptionRef,\r\n                {\r\n                    visibility: \"hidden\",\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    visibility: \"visible\",\r\n                    duration: 1,\r\n                    opacity: 1\r\n                })\r\n        }\r\n    }\r\n\r\n    const hideFigcatpion = () => {\r\n        if (!isMobile) {\r\n            gsap.fromTo(\r\n                figcaptionRef,\r\n                {\r\n                    visibility: \"visible\",\r\n                    opacity: 0\r\n                },\r\n                {\r\n                    visibility: \"hidden\",\r\n                    duration: 1,\r\n                    opacity: 0\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <figure className=\"skill-figure\" ref={e => skillRef = e}>\r\n                <img src={props.imgSrc} \r\n                // onMouseOver={() => showFigcatpion()} onMouseOut={() => hideFigcatpion()} \r\n                className=\"skill-img\" />\r\n                <figcaption>\r\n                    <h3 \r\n                    // onMouseOver={() => showFigcatpion()} onMouseOut={() => hideFigcatpion()}\r\n                    >{props.name}</h3>\r\n                    <div className=\"skill-desc-container\" ref={e => figcaptionRef = e} \r\n                    // style={isMobile ? styleMobile() : style()}\r\n                    >\r\n                        <div className=\"desc-container\">\r\n                            {props.skillDescription.map(element => {\r\n                                return <>\r\n                                    <p className=\"skill-desc\">{element}</p>\r\n                                    {/* <div style={{ position: \"absolute\", borderBottom: \"2px solid #696da3\", transform: `rotate(${randBoolean ? \"-1\" : \"1\"}deg)`, width: \"100%\" }}></div>\r\n                                    <div style={{ position: \"absolute\", borderBottom: \"4px solid #696da3\", transform: `rotate(${randBoolean ? 0.5 * -1 : 0.5 * 1}deg)`, width: \"100%\" }}></div>\r\n                                    <div style={{ position: \"absolute\", borderBottom: \"3px solid #696da3\", transform: `rotate(${randBoolean ? 2 * -1 : 2 * 1}deg)`, width: \"100%\" }}></div> */}\r\n                                </>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div style={{ position: \"absolute\", height: \"10px\", width: \"100%\", bottom: \"0px\", left: \"0px\", backgroundColor: \" #696da3\" }}></div> */}\r\n                </figcaption>\r\n            </figure>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skill","C:\\Users\\Wojtek\\Desktop\\new-site\\src\\containers\\Footer\\Footer.jsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":10,"nodeType":"106","messageId":"107","endLine":20,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":48,"column":6,"nodeType":"110","endLine":48,"endColumn":8,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"112","line":60,"column":9,"nodeType":"106","messageId":"107","endLine":60,"endColumn":22},{"ruleId":"104","severity":1,"message":"113","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":18},{"ruleId":"104","severity":1,"message":"115","line":30,"column":26,"nodeType":"106","messageId":"107","endLine":30,"endColumn":31},{"ruleId":"108","severity":1,"message":"116","line":48,"column":8,"nodeType":"110","endLine":48,"endColumn":16,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":95,"column":8,"nodeType":"110","endLine":95,"endColumn":18,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":110,"column":37,"nodeType":"122","endLine":110,"endColumn":60},{"ruleId":"120","severity":1,"message":"121","line":111,"column":37,"nodeType":"122","endLine":111,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":112,"column":37,"nodeType":"122","endLine":112,"endColumn":56},{"ruleId":"120","severity":1,"message":"121","line":113,"column":37,"nodeType":"122","endLine":113,"endColumn":53},{"ruleId":"120","severity":1,"message":"121","line":133,"column":37,"nodeType":"122","endLine":133,"endColumn":60},{"ruleId":"120","severity":1,"message":"121","line":134,"column":37,"nodeType":"122","endLine":134,"endColumn":57},{"ruleId":"120","severity":1,"message":"121","line":135,"column":37,"nodeType":"122","endLine":135,"endColumn":56},{"ruleId":"120","severity":1,"message":"121","line":136,"column":37,"nodeType":"122","endLine":136,"endColumn":53},{"ruleId":"104","severity":1,"message":"123","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"124","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"125","line":52,"column":11,"nodeType":"106","messageId":"107","endLine":52,"endColumn":15},{"ruleId":"104","severity":1,"message":"115","line":54,"column":26,"nodeType":"106","messageId":"107","endLine":54,"endColumn":31},{"ruleId":"108","severity":1,"message":"116","line":63,"column":8,"nodeType":"110","endLine":63,"endColumn":16,"suggestions":"126"},{"ruleId":"104","severity":1,"message":"115","line":23,"column":26,"nodeType":"106","messageId":"107","endLine":23,"endColumn":31},{"ruleId":"104","severity":1,"message":"127","line":27,"column":11,"nodeType":"106","messageId":"107","endLine":27,"endColumn":20},{"ruleId":"104","severity":1,"message":"128","line":28,"column":11,"nodeType":"106","messageId":"107","endLine":28,"endColumn":20},{"ruleId":"108","severity":1,"message":"116","line":39,"column":8,"nodeType":"110","endLine":39,"endColumn":16,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"121","line":124,"column":76,"nodeType":"122","endLine":124,"endColumn":92},{"ruleId":"120","severity":1,"message":"121","line":125,"column":69,"nodeType":"122","endLine":125,"endColumn":86},{"ruleId":"120","severity":1,"message":"121","line":126,"column":73,"nodeType":"122","endLine":126,"endColumn":89},{"ruleId":"130","severity":1,"message":"131","line":130,"column":119,"nodeType":"132","endLine":130,"endColumn":131},{"ruleId":"130","severity":1,"message":"131","line":134,"column":124,"nodeType":"132","endLine":134,"endColumn":135},{"ruleId":"104","severity":1,"message":"115","line":10,"column":26,"nodeType":"106","messageId":"107","endLine":10,"endColumn":31},{"ruleId":"108","severity":1,"message":"116","line":21,"column":8,"nodeType":"110","endLine":21,"endColumn":16,"suggestions":"133"},{"ruleId":"104","severity":1,"message":"115","line":13,"column":26,"nodeType":"106","messageId":"107","endLine":13,"endColumn":31},{"ruleId":"108","severity":1,"message":"116","line":24,"column":8,"nodeType":"110","endLine":24,"endColumn":16,"suggestions":"134"},{"ruleId":"104","severity":1,"message":"135","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"136","line":13,"column":9,"nodeType":"106","messageId":"107","endLine":13,"endColumn":20},{"ruleId":"104","severity":1,"message":"137","line":22,"column":9,"nodeType":"106","messageId":"107","endLine":22,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":23,"column":9,"nodeType":"140","messageId":"141","endLine":30,"endColumn":10},{"ruleId":"104","severity":1,"message":"142","line":33,"column":9,"nodeType":"106","messageId":"107","endLine":33,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":34,"column":9,"nodeType":"140","messageId":"141","endLine":41,"endColumn":10},{"ruleId":"108","severity":1,"message":"143","line":62,"column":8,"nodeType":"110","endLine":62,"endColumn":24,"suggestions":"144"},{"ruleId":"104","severity":1,"message":"145","line":80,"column":11,"nodeType":"106","messageId":"107","endLine":80,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":99,"column":17,"nodeType":"122","endLine":101,"endColumn":41},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"no-unused-vars","'aboutStyle' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setNavbar'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'showLanguages' is assigned a value but never used.","'SubinfoBg1' is defined but never used.","'SubinfoBg2' is defined but never used.","'entry' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["149"],"React Hook useEffect has a missing dependency: 't1'. Either include it or remove the dependency array.",["150"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'gsap' is defined but never used.","'refs' is assigned a value but never used.",["151"],"'styleSend' is assigned a value but never used.","'styleLoad' is assigned a value but never used.",["152"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["153"],["154"],"'useState' is defined but never used.","'randBoolean' is assigned a value but never used.","'style' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'styleMobile' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'rand'. Either include them or remove the dependency array.",["155"],"'hideFigcatpion' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"158","fix":"162"},{"desc":"158","fix":"163"},{"desc":"158","fix":"164"},{"desc":"158","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [setNavbar]",{"range":"168","text":"169"},"Update the dependencies array to be: [inView, props]",{"range":"170","text":"171"},"Update the dependencies array to be: [animated, t1]",{"range":"172","text":"173"},{"range":"174","text":"171"},{"range":"175","text":"171"},{"range":"176","text":"171"},{"range":"177","text":"171"},"Update the dependencies array to be: [props.animated, props.id, rand]",{"range":"178","text":"179"},[1852,1854],"[setNavbar]",[1978,1986],"[inView, props]",[3127,3137],"[animated, t1]",[2297,2305],[1475,1483],[651,659],[808,816],[1797,1813],"[props.animated, props.id, rand]"]